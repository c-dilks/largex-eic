# SPDX-License-Identifier: LGPL-3.0-or-later
# Copyright (C) 2022 Christopher Dilks

name: ci

on:
  pull_request:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

env:
  ebeam_en: 10
  pbeam_en: 100
  root: root -b -q
  root_no_delphes: root -b -q macro/ci/define_exclude_delphes.C 

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

# BUILD ---------------------------------------------------------------------------
  build_all:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          run: |
            echo "[CI] install delphes"
            deps/install_delphes.sh
            echo "[CI] build sidis-eic"
            source environ.sh
            make
      - uses: actions/upload-artifact@v3
        with:
          name: x_build_all
          retention-days: 1
          path: |
            # sidis-eic
            lib
            src/*Dict.cxx
            # delphes
            deps/delphes
            external
            # mstwpdf
            deps/mstwpdf/*.o
            deps/mstwpdf/*.so
            # adage
            deps/adage/lib
            deps/adage/src/*Dict.cxx

  build_no_delphes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          run: |
            echo "[CI] build sidis-eic"
            source environ.sh
            EXCLUDE_DELPHES=1 make
      - uses: actions/upload-artifact@v3
        with:
          name: x_build_no_delphes
          retention-days: 1
          path: |
            # sidis-eic
            lib
            src/*Dict.cxx
            # mstwpdf
            deps/mstwpdf/*.o
            deps/mstwpdf/*.so
            # adage
            deps/adage/lib
            deps/adage/src/*Dict.cxx

# DELPHES ---------------------------------------------------------------------------

# run delphes on a hepmc file
  delphes_fastsim:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        minq2: [1, 10, 100, 1000] # note: keep consistent with `download-artifact` with name `x_fastsim_delphes_*`
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: eic/run-cvmfs-osg-eic-shell@main
        env:
          S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
          S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] add S3 host"
            s3tools/add-host.sh
            echo "[CI] generate list of HEPMC files"
            s3tools/generate-hepmc-list.sh ${{env.ebeam_en}}x${{env.pbeam_en}} ${{matrix.minq2}} 6 | tee hepmc.list
            echo "[CI] download HEPMC files"
            while read hepmc; do mc cp $hepmc datagen/; done < hepmc.list
            echo "====="
            ls -lh datagen
            echo "[CI] install delphes"
            deps/install_delphes.sh
            echo "[CI] RUN DELPHES"
            chmod u+x deps/delphes/DelphesHepMC3
            for hepmc in datagen/*.hepmc.gz; do deps/run_delphes.sh $hepmc; done
            echo "====="
            ls -lh datarec
            echo "[CI] make config file"
            s3tools/make-fastsim-local-config.sh ${{env.ebeam_en}}x${{env.pbeam_en}} ${{matrix.minq2}} 0 datarec delphes.config
            echo "====="
            cat delphes.config
      - uses: actions/upload-artifact@v3
        with:
          name: x_fastsim_delphes_q2min${{matrix.minq2}}
          retention-days: 1
          path: |
            datarec/*.root
            delphes.config
            delphes.config.list

# DOWNLOAD FULLSIM ---------------------------------------------------------------------------

# download full simulation files and make config
  download_fullsim:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - { detector: epic,   num_files: 20 }
          - { detector: athena, num_files: 20 }
          - { detector: ecce,   num_files: 40 }
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: eic/run-cvmfs-osg-eic-shell@main
        env:
          S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
          S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] download files from S3"
            s3tools/add-host.sh
            s3tools/make-${{matrix.detector}}-config.sh ${{env.ebeam_en}}x${{env.pbeam_en}} ${{matrix.detector}} d ${{matrix.num_files}} s3files.config
            echo "[CI] cat config file"
            cat s3files.config
      - uses: actions/upload-artifact@v3
        with:
          name: x_fullsim_${{matrix.detector}}
          retention-days: 1
          path: |
            s3files.config
            datarec

# ANALYSIS ---------------------------------------------------------------------------

# run analysis macros matrix for fastsim
  analysis_fastsim:
    needs: 
      - build_all
      - delphes_fastsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        aname: [x_q2, p_eta, yRatio]
        recon: [Ele]
        include:
          - { aname: x_q2, recon: Mixed }
          - { aname: x_q2, recon: JB }
          - { aname: x_q2, recon: DA }
          - { aname: x_q2, recon: Sigma }
          - { aname: x_q2, recon: eSigma }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build_all
      - uses: actions/download-artifact@v3
        with:
          name: x_fastsim_delphes_q2min1
          path: x_fastsim_delphes_q2min1
      - uses: actions/download-artifact@v3
        with:
          name: x_fastsim_delphes_q2min10
          path: x_fastsim_delphes_q2min10
      - uses: actions/download-artifact@v3
        with:
          name: x_fastsim_delphes_q2min100
          path: x_fastsim_delphes_q2min100
      - uses: actions/download-artifact@v3
        with:
          name: x_fastsim_delphes_q2min1000
          path: x_fastsim_delphes_q2min1000
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] job matrix params:"
            echo "aname = ${{matrix.aname}}"
            echo "recon = ${{matrix.recon}}"
            echo "[CI] flatten tree of Delphes files"
            find -name "*.root" -print | tee tmp.list
            cat tmp.list | while read f; do mv -v $f datarec/; done
            echo "[CI] generate combined config file"
            s3tools/generate-config-file.rb delphes.config ${{env.ebeam_en}}x${{env.pbeam_en}} x_fastsim_delphes*/delphes.config.list
            echo "[CI] cat delphes.config"
            cat delphes.config
            echo "[CI] ANALYSIS MACRO"
            ${{env.root}} 'macro/ci/analysis_${{matrix.aname}}.C("delphes.config","fastsim.${{matrix.aname}}.${{matrix.recon}}","${{matrix.recon}}")'
      - uses: actions/upload-artifact@v3
        with:
          name: root_analysis_fastsim_${{matrix.aname}}_${{matrix.recon}}
          retention-days: 7
          path: out

# run analysis macros matrix for full simulation
  analysis_fullsim:
    needs: 
      - build_no_delphes
      - download_fullsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        detector: [epic, athena, ecce]
        aname: [x_q2, p_eta, yRatio]
        recon: [Ele]
        include: # enable other recon methods for `aname==x_q2` only
        - { aname: x_q2, recon: Mixed,  detector: epic } # FIXME: not sure how to avoid being repetitive... 
        - { aname: x_q2, recon: JB,     detector: epic }
        - { aname: x_q2, recon: DA,     detector: epic }
        - { aname: x_q2, recon: Sigma,  detector: epic }
        - { aname: x_q2, recon: eSigma, detector: epic }
        - { aname: x_q2, recon: Mixed,  detector: athena }
        - { aname: x_q2, recon: JB,     detector: athena }
        - { aname: x_q2, recon: DA,     detector: athena }
        - { aname: x_q2, recon: Sigma,  detector: athena }
        - { aname: x_q2, recon: eSigma, detector: athena }
        - { aname: x_q2, recon: Mixed,  detector: ecce   }
        - { aname: x_q2, recon: JB,     detector: ecce   }
        - { aname: x_q2, recon: DA,     detector: ecce   }
        - { aname: x_q2, recon: Sigma,  detector: ecce   }
        - { aname: x_q2, recon: eSigma, detector: ecce   }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build_no_delphes
      - uses: actions/download-artifact@v3
        with:
          name: x_fullsim_${{matrix.detector}}
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] job matrix params:"
            echo "aname = ${{matrix.aname}}"
            echo "recon = ${{matrix.recon}}"
            echo "[CI] cat s3files.config"
            cat s3files.config
            echo "[CI] ANALYSIS MACRO"
            ${{env.root_no_delphes}} 'macro/ci/analysis_${{matrix.aname}}.C("s3files.config","${{matrix.detector}}.${{matrix.aname}}.${{matrix.recon}}","${{matrix.recon}}")'
      - uses: actions/upload-artifact@v3
        with:
          name: root_analysis_${{matrix.detector}}_${{matrix.aname}}_${{matrix.recon}}
          retention-days: 7
          path: out

# POSTPROCESS ---------------------------------------------------------------------------

# run postprocess macros matrix for fastsim and fullsim
  postprocess:
    needs: 
      - analysis_fastsim
      - analysis_fullsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mode:
          - fastsim
          - epic
          - athena
          - ecce
        pname: # list only jobs which will only use one (primary) recon method
          - bin_test
          - coverage2D_p_eta
          - y_minima
        recon: [Ele] # primary recon method(s)
        include:
          # use only primary recon method
          - { pname: bin_test,         aname: x_q2,   pmacro: postprocess_bin_test.C }
          - { pname: coverage2D_p_eta, aname: p_eta,  pmacro: postprocess_p_eta.C    }
          - { pname: y_minima,         aname: yRatio, pmacro: postprocess_yRatio.C   }
          # use all reconstruction methods: # FIXME: not sure how to avoid being repetitive... 
          - { mode: fastsim, pname: coverage2D_x_q2, recon: Ele,    aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage2D_x_q2, recon: DA,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage2D_x_q2, recon: eSigma, aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage2D_x_q2, recon: JB,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage2D_x_q2, recon: Mixed,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage2D_x_q2, recon: Sigma,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: epic,    pname: coverage2D_x_q2, recon: Ele,    aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: epic,    pname: coverage2D_x_q2, recon: DA,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: epic,    pname: coverage2D_x_q2, recon: eSigma, aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: epic,    pname: coverage2D_x_q2, recon: JB,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: epic,    pname: coverage2D_x_q2, recon: Mixed,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: epic,    pname: coverage2D_x_q2, recon: Sigma,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: athena,  pname: coverage2D_x_q2, recon: Ele,    aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: athena,  pname: coverage2D_x_q2, recon: DA,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: athena,  pname: coverage2D_x_q2, recon: eSigma, aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: athena,  pname: coverage2D_x_q2, recon: JB,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: athena,  pname: coverage2D_x_q2, recon: Mixed,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: athena,  pname: coverage2D_x_q2, recon: Sigma,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: ecce,    pname: coverage2D_x_q2, recon: Ele,    aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: ecce,    pname: coverage2D_x_q2, recon: DA,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: ecce,    pname: coverage2D_x_q2, recon: eSigma, aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: ecce,    pname: coverage2D_x_q2, recon: JB,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: ecce,    pname: coverage2D_x_q2, recon: Mixed,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: ecce,    pname: coverage2D_x_q2, recon: Sigma,  aname: x_q2, pmacro: postprocess_x_q2.C }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build_no_delphes
      - uses: actions/download-artifact@v3
        with:
          name: root_analysis_${{matrix.mode}}_${{matrix.aname}}_${{matrix.recon}}
          path: out
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] job matrix params:"
            echo "aname = ${{matrix.aname}}"
            echo "pname = ${{matrix.pname}}"
            echo "mode = ${{matrix.mode}}"
            echo "recon = ${{matrix.recon}}"
            echo "pmacro = ${{matrix.pmacro}}"
            echo "[CI] POSTPROCESS MACRO"
            ls out
            mv -v out/${{matrix.mode}}.{${{matrix.aname}},${{matrix.pname}}}.${{matrix.recon}}.root # rename aname -> pname
            ${{env.root_no_delphes}} 'macro/ci/${{matrix.pmacro}}("out/${{matrix.mode}}.${{matrix.pname}}.${{matrix.recon}}.root")'
            rm -v out/${{matrix.mode}}.${{matrix.pname}}.${{matrix.recon}}.root # rm analysis_root artifact
      - uses: actions/upload-artifact@v3
        with:
          name: results_${{matrix.mode}}_${{matrix.pname}}_${{matrix.recon}}
          retention-days: 30
          path: |
            out/*.images/*.png
            out/*.root

# COMPARATORS ---------------------------------------------------------------------------

# run compare macros matrix for fastsim vs. fullsim
  comparison:
    needs:
      - analysis_fastsim
      - analysis_fullsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pname: # list only jobs which will only use one (primary) recon method
          - coverage_p_eta
          - resolution_p_eta
        recon: [Ele] # primary recon method(s)
        include:
          # use only primary recon method
          - { pname: coverage_p_eta,   aname: p_eta, xvar: p, yvar: eta }
          - { pname: resolution_p_eta, aname: p_eta, xvar: p, yvar: eta }
          # use all reconstruction methods:
          ## resolution
          - { pname: resolution_x_q2, recon: Ele,    aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: Mixed,  aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: DA,     aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: JB,     aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: Sigma,  aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: eSigma, aname: x_q2, xvar: x, yvar: q2 }
          ## coverage
          - { pname: coverage_x_q2,   recon: Ele,    aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: Mixed,  aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: DA,     aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: JB,     aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: Sigma,  aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: eSigma, aname: x_q2, xvar: x, yvar: q2 }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build_no_delphes
      - uses: actions/download-artifact@v3
        with:
          name: root_analysis_fastsim_${{matrix.aname}}_${{matrix.recon}}
          path: out
      - uses: actions/download-artifact@v3
        with:
          name: root_analysis_epic_${{matrix.aname}}_${{matrix.recon}}
          path: out
      - uses: actions/download-artifact@v3
        with:
          name: root_analysis_athena_${{matrix.aname}}_${{matrix.recon}}
          path: out
      - uses: actions/download-artifact@v3
        with:
          name: root_analysis_ecce_${{matrix.aname}}_${{matrix.recon}}
          path: out
      - uses: cvmfs-contrib/github-action-cvmfs@v3
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] job matrix params:"
            echo "aname = ${{matrix.aname}}"
            echo "pname = ${{matrix.pname}}"
            echo "recon = ${{matrix.recon}}"
            echo "xvar = ${{matrix.xvar}}"
            echo "yvar = ${{matrix.yvar}}"
            echo "[CI] COMPARATOR MACRO"
            ls out
            mv -v out/fastsim.{${{matrix.aname}},${{matrix.pname}}}.${{matrix.recon}}.root # rename aname -> pname
            mv -v out/epic.{${{matrix.aname}},${{matrix.pname}}}.${{matrix.recon}}.root # rename aname -> pname
            mv -v out/athena.{${{matrix.aname}},${{matrix.pname}}}.${{matrix.recon}}.root # rename aname -> pname
            mv -v out/ecce.{${{matrix.aname}},${{matrix.pname}}}.${{matrix.recon}}.root # rename aname -> pname
            ${{env.root_no_delphes}} 'macro/ci/comparator.C("out/fastsim.${{matrix.pname}}.${{matrix.recon}}.root","out/epic.${{matrix.pname}}.${{matrix.recon}}.root","out/athena.${{matrix.pname}}.${{matrix.recon}}.root","out/ecce.${{matrix.pname}}.${{matrix.recon}}.root","out/comparison.${{matrix.pname}}.${{matrix.recon}}","${{matrix.xvar}}","${{matrix.yvar}}")'
            rm -v out/fastsim.${{matrix.pname}}.${{matrix.recon}}.root # rm analysis_root artifact
            rm -v out/epic.${{matrix.pname}}.${{matrix.recon}}.root # rm analysis_root artifact
            rm -v out/athena.${{matrix.pname}}.${{matrix.recon}}.root # rm analysis_root artifact
            rm -v out/ecce.${{matrix.pname}}.${{matrix.recon}}.root # rm analysis_root artifact
      - uses: actions/upload-artifact@v3
        with:
          name: comparison_${{matrix.pname}}_${{matrix.recon}}
          retention-days: 30
          path: |
            out/comparison*.images/*.png
            out/comparison*.root

# ARTIFACTS ---------------------------------------------------------------------------

# collect artifacts into one directory
  collect:
    needs: 
      - postprocess
      - comparison
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: results
      - name: tree_artifacts
        run: tree results
      - name: cull
        run: |
          rm -vr results/x_*
          rm -vr results/root_analysis_*
          find results -name "*.root" -print | xargs rm -v
          rm -v results/*y_minima*/*/canv*.png
          tree results
      - name: flatten
        run: |
          macro/ci/flatten-artifacts.sh results
          tree results
      - name: merge_recon
        run: |
          macro/ci/merge-recon.sh results resolution_x_q2
          macro/ci/merge-recon.sh results coverage_x_q2
          macro/ci/merge-recon.sh results coverage2D_x_q2
          tree results
      - name: merge_fastfull
        run: |
          macro/ci/merge-fastfull.sh results
          tree results
      - uses: actions/upload-artifact@v3
        with:
          retention-days: 90
          name: _FULL_RESULTS
          path: results
