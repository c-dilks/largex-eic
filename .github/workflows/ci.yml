name: ci

on:
  pull_request:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

env:
  ebeam_en: 10
  pbeam_en: 100
  cross_ang: -25

jobs:

# BUILD ---------------------------------------------------------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v2
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          run: |
            echo "[CI] install delphes"
            deps/install_delphes.sh
            echo "[CI] build sidis-eic"
            source environ.sh
            make
      - uses: actions/upload-artifact@v3
        with:
          name: x_build
          retention-days: 1
          path: |
            # sidis-eic
            lib
            src/Sidis-eicDict.cxx
            # mstwpdf
            deps/mstwpdf/*.o
            deps/mstwpdf/*.so
            # delphes
            deps/delphes
            external

# DELPHES ---------------------------------------------------------------------------

# run delphes on a hepmc file
  delphes_fastsim:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        minq2: [1, 10, 100, 1000]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build
      - uses: cvmfs-contrib/github-action-cvmfs@v2
      - uses: eic/run-cvmfs-osg-eic-shell@main
        env:
          S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
          S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] add S3 host"
            s3tools/add-host.sh
            echo "[CI] generate list of HEPMC files"
            s3tools/generate-hepmc-list.sh ${{env.ebeam_en}}x${{env.pbeam_en}} ${{matrix.minq2}} 4 | tee hepmc.list
            echo "[CI] download HEPMC files"
            while read hepmc; do mc cp $hepmc datagen/; done < hepmc.list
            echo "====="
            ls -lh datagen
            echo "[CI] RUN DELPHES"
            chmod u+x deps/delphes/DelphesHepMC3
            for hepmc in datagen/*.hepmc.gz; do deps/run_delphes.sh $hepmc; done
            echo "====="
            ls -lh datarec
            echo "[CI] make config file"
            s3tools/make-fastsim-local-config.sh ${{env.ebeam_en}}x${{env.pbeam_en}} ${{matrix.minq2}} datarec delphes.config
            echo "====="
            cat delphes.config
      - uses: actions/upload-artifact@v3
        with:
          name: delphes_${{env.ebeam_en}}x${{env.pbeam_en}}_q2min${{matrix.minq2}}_output
          retention-days: 1
          path: |
            datarec/*.root
            delphes.config

# DOWNLOAD FULLSIM ---------------------------------------------------------------------------

# download fullsim files and make config
  download_fullsim:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cvmfs-contrib/github-action-cvmfs@v2
      - uses: eic/run-cvmfs-osg-eic-shell@main
        env:
          S3_ACCESS_KEY: ${{secrets.S3_ACCESS_KEY}}
          S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] download fullsim files"
            s3tools/add-host.sh
            s3tools/make-athena-config.sh ${{env.ebeam_en}}x${{env.pbeam_en}} d 8 s3files.config
            echo "[CI] cat config file"
            cat s3files.config
      - uses: actions/upload-artifact@v3
        with:
          name: x_fullsim
          retention-days: 1
          path: |
            s3files.config
            datarec

# ANALYSIS ---------------------------------------------------------------------------

# run analysis macros matrix for fastsim
  analysis_fastsim:
    needs: 
      - build
      - delphes_fastsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        aname: [x_q2, p_eta, yRatio]
        recon: [Ele]
        include:
          - { aname: x_q2, recon: Mixed }
          - { aname: x_q2, recon: JB }
          - { aname: x_q2, recon: DA }
          - { aname: x_q2, recon: Sigma }
          - { aname: x_q2, recon: eSigma }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build
      - uses: actions/download-artifact@v3
        with:
          path: datarec
      - uses: cvmfs-contrib/github-action-cvmfs@v2
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] job matrix params:"
            echo "aname = ${{matrix.aname}}"
            echo "recon = ${{matrix.recon}}"
            echo "[CI] flatten tree of Delphes files"
            find datarec -name "*.root" -print | tee tmp.list
            cat tmp.list | while read f; do mv -v $f datarec/; done
            cat datarec/delphes*/delphes.config > delphes.config
            sort -nr -o delphes.config{,}
            echo "[CI] cat delphes.config"
            cat delphes.config
            echo "[CI] ANALYSIS MACRO"
            root -b -q 'macro/ci/analysis_${{matrix.aname}}.C("delphes.config",${{env.ebeam_en}},${{env.pbeam_en}},${{env.cross_ang}},"fastsim.${{matrix.aname}}.${{matrix.recon}}","${{matrix.recon}}")'
      - uses: actions/upload-artifact@v3
        with:
          name: root_analysis_fastsim_${{matrix.aname}}_${{matrix.recon}}
          retention-days: 7
          path: out

# run analysis macros matrix for fullsim
  analysis_fullsim:
    needs: 
      - build
      - download_fullsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        aname: [x_q2, p_eta, yRatio]
        recon: [Ele]
        include:
          - { aname: x_q2, recon: Mixed }
          - { aname: x_q2, recon: JB }
          - { aname: x_q2, recon: DA }
          - { aname: x_q2, recon: Sigma }
          - { aname: x_q2, recon: eSigma }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build
      - uses: actions/download-artifact@v3
        with:
          name: x_fullsim
      - uses: cvmfs-contrib/github-action-cvmfs@v2
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] job matrix params:"
            echo "aname = ${{matrix.aname}}"
            echo "recon = ${{matrix.recon}}"
            echo "[CI] cat s3files.config"
            cat s3files.config
            echo "[CI] ANALYSIS MACRO"
            root -b -q 'macro/ci/analysis_${{matrix.aname}}.C("s3files.config",${{env.ebeam_en}},${{env.pbeam_en}},${{env.cross_ang}},"fullsim.${{matrix.aname}}.${{matrix.recon}}","${{matrix.recon}}")'
      - uses: actions/upload-artifact@v3
        with:
          name: root_analysis_fullsim_${{matrix.aname}}_${{matrix.recon}}
          retention-days: 7
          path: out

# POSTPROCESS ---------------------------------------------------------------------------

# run postprocess macros matrix for fastsim and fullsim
  postprocess:
    if: ${{always()}}
    needs: 
      - analysis_fastsim
      - analysis_fullsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mode:
          - fastsim
          - fullsim
        pname: # list only jobs which will only use one (primary) recon method
          - bin_test
          - coverage_p_eta
          - resolution_p_eta
          - y_minima
        recon: [Ele] # primary recon method(s)
        include:
          # use only primary recon method
          - { pname: bin_test,         aname: x_q2,   pmacro: postprocess_bin_test.C }
          - { pname: coverage_p_eta,   aname: p_eta,  pmacro: postprocess_p_eta.C }
          - { pname: resolution_p_eta, aname: p_eta,  pmacro: postprocess_p_eta.C }
          - { pname: y_minima,         aname: yRatio, pmacro: postprocess_yRatio.C }
          # use all reconstruction methods: (...seems like we really need to define every matrix element...) 
          ## resolution
          - { mode: fastsim, pname: resolution_x_q2, recon: Ele,    aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: resolution_x_q2, recon: Ele,    aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: resolution_x_q2, recon: Mixed,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: resolution_x_q2, recon: Mixed,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: resolution_x_q2, recon: DA,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: resolution_x_q2, recon: DA,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: resolution_x_q2, recon: JB,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: resolution_x_q2, recon: JB,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: resolution_x_q2, recon: Sigma,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: resolution_x_q2, recon: Sigma,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: resolution_x_q2, recon: eSigma, aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: resolution_x_q2, recon: eSigma, aname: x_q2, pmacro: postprocess_x_q2.C }
          ## coverage
          - { mode: fastsim, pname: coverage_x_q2,   recon: Ele,    aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: coverage_x_q2,   recon: Ele,    aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage_x_q2,   recon: Mixed,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: coverage_x_q2,   recon: Mixed,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage_x_q2,   recon: DA,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: coverage_x_q2,   recon: DA,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage_x_q2,   recon: JB,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: coverage_x_q2,   recon: JB,     aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage_x_q2,   recon: Sigma,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: coverage_x_q2,   recon: Sigma,  aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fastsim, pname: coverage_x_q2,   recon: eSigma, aname: x_q2, pmacro: postprocess_x_q2.C }
          - { mode: fullsim, pname: coverage_x_q2,   recon: eSigma, aname: x_q2, pmacro: postprocess_x_q2.C }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build
      - uses: actions/download-artifact@v3
        with:
          name: root_analysis_${{matrix.mode}}_${{matrix.aname}}_${{matrix.recon}}
          path: out
      - uses: cvmfs-contrib/github-action-cvmfs@v2
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] job matrix params:"
            echo "aname = ${{matrix.aname}}"
            echo "pname = ${{matrix.pname}}"
            echo "mode = ${{matrix.mode}}"
            echo "recon = ${{matrix.recon}}"
            echo "pmacro = ${{matrix.pmacro}}"
            echo "[CI] POSTPROCESS MACRO"
            ls out
            mv -v out/${{matrix.mode}}.{${{matrix.aname}},${{matrix.pname}}}.${{matrix.recon}}.root # rename aname -> pname
            root -b -q 'macro/ci/${{matrix.pmacro}}("out/${{matrix.mode}}.${{matrix.pname}}.${{matrix.recon}}.root")'
            rm -v out/${{matrix.mode}}.${{matrix.pname}}.${{matrix.recon}}.root # rm analysis_root artifact
      - uses: actions/upload-artifact@v3
        with:
          name: results_${{matrix.mode}}_${{matrix.pname}}_${{matrix.recon}}
          retention-days: 30
          path: |
            out/*.images/*.png
            out/*.root

# COMPARATORS ---------------------------------------------------------------------------

# run compare macros matrix for fastsim vs. fullsim
  compare_fastfull:
    needs:
      - analysis_fastsim
      - analysis_fullsim
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pname: # list only jobs which will only use one (primary) recon method
          - coverage_p_eta
          - resolution_p_eta
        recon: [Ele] # primary recon method(s)
        include:
          # use only primary recon method
          - { pname: coverage_p_eta,   aname: p_eta, xvar: p, yvar: eta }
          - { pname: resolution_p_eta, aname: p_eta, xvar: p, yvar: eta }
          # use all reconstruction methods: (...seems like we really need to define every matrix element...) 
          ## resolution
          - { pname: resolution_x_q2, recon: Ele,    aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: Mixed,  aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: DA,     aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: JB,     aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: Sigma,  aname: x_q2, xvar: x, yvar: q2 }
          - { pname: resolution_x_q2, recon: eSigma, aname: x_q2, xvar: x, yvar: q2 }
          ## coverage
          - { pname: coverage_x_q2,   recon: Ele,    aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: Mixed,  aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: DA,     aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: JB,     aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: Sigma,  aname: x_q2, xvar: x, yvar: q2 }
          - { pname: coverage_x_q2,   recon: eSigma, aname: x_q2, xvar: x, yvar: q2 }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: x_build
      - uses: actions/download-artifact@v3
        with:
          name: root_analysis_fastsim_${{matrix.aname}}_${{matrix.recon}}
          path: out
      - uses: actions/download-artifact@v3
        with:
          name: root_analysis_fullsim_${{matrix.aname}}_${{matrix.recon}}
          path: out
      - uses: cvmfs-contrib/github-action-cvmfs@v2
      - uses: eic/run-cvmfs-osg-eic-shell@main
        with:
          platform-release: "jug_xl:nightly"
          setup: environ.sh
          run: |
            echo "[CI] job matrix params:"
            echo "aname = ${{matrix.aname}}"
            echo "pname = ${{matrix.pname}}"
            echo "recon = ${{matrix.recon}}"
            echo "xvar = ${{matrix.xvar}}"
            echo "yvar = ${{matrix.yvar}}"
            echo "[CI] COMPARATOR MACRO"
            ls out
            mv -v out/fastsim.{${{matrix.aname}},${{matrix.pname}}}.${{matrix.recon}}.root # rename aname -> pname
            mv -v out/fullsim.{${{matrix.aname}},${{matrix.pname}}}.${{matrix.recon}}.root # rename aname -> pname
            root -b -q 'macro/ci/comparator.C("out/fastsim.${{matrix.pname}}.${{matrix.recon}}.root","out/fullsim.${{matrix.pname}}.${{matrix.recon}}.root","out/fastfull.${{matrix.pname}}.${{matrix.recon}}","${{matrix.xvar}}","${{matrix.yvar}}")'
            rm -v out/fastsim.${{matrix.pname}}.${{matrix.recon}}.root # rm analysis_root artifact
            rm -v out/fullsim.${{matrix.pname}}.${{matrix.recon}}.root # rm analysis_root artifact
      - uses: actions/upload-artifact@v3
        with:
          name: results_fastfull_${{matrix.pname}}_${{matrix.recon}}
          retention-days: 30
          path: |
            out/fastfull*.images/*.png
            out/fastfull*.root

# ARTIFACTS ---------------------------------------------------------------------------

# collect artifacts into one directory
  collect:
    if: ${{always()}}
    needs: 
      - postprocess
      - compare_fastfull
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: results
      - name: tree_artifacts
        run: tree results
      - name: cull
        run: |
          rm -vr results/x_*
          rm -vr results/root_analysis_*
          rm -vr results/delphes_*_output
          find results -name "*.root" -print | xargs rm -v
          rm -v results/*y_minima*/*/canv*.png
          tree results
      - name: flatten
        run: |
          macro/ci/flatten-artifacts.sh results
          tree results
      - name: merge_recon
        run: |
          macro/ci/merge-recon.sh results resolution_x_q2
          macro/ci/merge-recon.sh results coverage_x_q2
          tree results
      - name: merge_fastfull
        run: |
          macro/ci/merge-fastfull.sh results
          tree results
      - uses: actions/upload-artifact@v3
        with:
          retention-days: 90
          name: _FULL_RESULTS
          path: results
